<!-- Copyright (C) The IETF Trust (2012) -->
<!-- Copyright (C) The Internet Society (2012) -->

<section anchor="sec:security" title="Security Considerations">
  <section anchor="ss:sec:mac" title="Trust Needed for a Community">
    <t>
      Labeled NFS is a transport mechanism for labels, a storage requirement for
      labels, and a definition of how to interpret labels. It defines the
      responsibilities of the client and the server in the various permutations
      of being MAC-Functional. It does not however dictate in any manner whether
      assumptions can be made about other entities in the relationship. For
      example, it does not define whether a MAC-Functional client
      can demand that a MAC-Aware server only accept requests from
      other MAC-Functional clients. That is a policy based in a MAC model
      and this document does not impose policies on systems.
    </t>

    <t>
      As the requirement is a policy, it can be met with the use of a MAC model.
      Let L be a LFS which implements the Limited Server mode, i.e., a
      MAC-Aware server connected to MAC-Functional clients. Then a new LFS
      L' can be created which has the additional policy that the MAC-Aware
      server MUST not accept any requests from a non-MAC-Functional client.
    </t>
  </section>

  <section anchor="sec:sec:guest" title="Guest Modes">
    <t>
      When either the client or server is operating in guest mode it is important to
      realize that one side is not enforcing MAC protections. Alternate methods are
      being used to handle the lack of MAC support and care should be taken to
      identify and mitigate threats from possible tampering outside of these methods.
    </t>
  </section>

  <section anchor="sec:sec:client" title="MAC-Functional Client Configuration">
    <t>
      We defined a MAC model as a access control decision made on a system which
      normal users do not have the ability to override policies (see <xref target="sec:intro" />).
      If the process labels are created solely on the client, then if a malicious
      user has sufficient access on that client, the Labeled NFS model is compromised. Note
      that this is no different from:

      <list style='symbols'>
        <t>
          current implementations in which the server uses policies to effectively determine
          the object label for requests from the client, or
        </t>

        <t>
          local decisions made on the client by the MAC security system.
        </t>
      </list>

      The server must either explicitly trust the client (as in <xref target="SENFSV3" />)
      or the MAC model should enforce that users cannot override policies, perhaps
      via a externally managed source.
    </t>

    <t>
      Once the labels leave the client, they can be protected by the transport mechanism
      as described in <xref target="req:secserv" />.
    </t>
  </section>
</section>
